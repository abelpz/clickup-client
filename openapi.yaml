openapi: 3.0.0
servers:
  - url: 'https://api.clickup.com'
    description: ''
    variables: {}
  - url: 'https://ivan-dev-api.clickup.com'
    description: ''
    variables: {}
info:
  version: 14f9e102-6793-40e8-ab79-2628e5acea50
  title: ClickUp API V2
  description:
    You can follow along at
    [https://clickup20.docs.apiary.io/#introduction/oauth2](https://clickup20.docs.apiary.io/#introduction/oauth2).


    You'll need your personal token for this, just change the authorization
    header to include it.
  termsOfService: ''
  contact: {}
  license:
    name: ''
paths:
  '/api/v2/task/{task_id}/attachment':
    post:
      summary: Create Task Attachment
      operationId: CreateTaskAttachment
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
            example:
              - key: attachment
                type: file
                src: []
      tags:
        - Attachments
  /api/v2/oauth/token:
    post:
      security: [] 
      summary: Get Access Token
      operationId: GetAccessToken
      parameters:
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/client_secret'
        - $ref: '#/components/parameters/code'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Authorization
  /api/v2/user:
    get:
      summary: Get Authorized User
      operationId: GetAuthorizedUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Authorization
  /api/v2/team:
    get:
      summary: Get Authorized Teams
      operationId: GetAuthorizedTeams
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Authorization
  '/api/v2/task/{task_id}/checklist':
    post:
      summary: Create Checklist
      operationId: CreateChecklist
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Checklist
            example:
              - name: Checklist
      tags:
        - Checklists
  '/api/v2/checklist/{checklist_id}':
    put:
      summary: Edit Checklist
      operationId: EditChecklist
      parameters:
        - $ref: '#/components/parameters/checklist_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Updated Checklist
                position: 0
            example:
              - name: Updated Checklist
                position: 0
      tags:
        - Checklists
    delete:
      summary: Delete Checklist
      operationId: DeleteChecklist
      parameters:
        - $ref: '#/components/parameters/checklist_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Checklists
  '/api/v2/checklist/{checklist_id}/checklist_item':
    post:
      summary: Create Checklist Item
      operationId: CreateChecklistItem
      parameters:
        - $ref: '#/components/parameters/checklist_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Checklist Item
                assignee: 546
            example:
              - name: Checklist Item
                assignee: 546
      tags:
        - Checklists
  '/api/v2/checklist/{checklist_id}/checklist_item/{checklist_item_id}':
    put:
      summary: Edit Checklist Item
      operationId: EditChecklistItem
      parameters:
        - $ref: '#/components/parameters/checklist_id'
        - $ref: '#/components/parameters/checklist_item_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Updated Checklist Item
                assignee: null
                resolved: true
                parent: null
            example:
              - name: Updated Checklist Item
                assignee: null
                resolved: true
                parent: null
      tags:
        - Checklists
    delete:
      summary: Delete Checklist Item
      operationId: DeleteChecklistItem
      parameters:
        - $ref: '#/components/parameters/checklist_id'
        - $ref: '#/components/parameters/checklist_item_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Checklists
  '/api/v2/task/{task_id}/comment':
    post:
      summary: Create Task Comment
      operationId: CreateTaskComment
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                comment_text: Task comment content
                assignee: 53480
                notify_all: true
            example:
              - comment_text: Task comment content
                assignee: 53480
                notify_all: true
      tags:
        - Comments
    get:
      summary: Get Task Comments
      operationId: GetTaskComments
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Comments
  '/api/v2/view/{view_id}/comment':
    post:
      summary: Create Chat View Comment
      operationId: CreateChatViewComment
      parameters:
        - $ref: '#/components/parameters/view_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                comment_text: View comment content
                notify_all: true
            example:
              - comment_text: View comment content
                notify_all: true
      tags:
        - Comments
    get:
      summary: Get Chat View Comments
      operationId: GetChatViewComments
      parameters:
        - $ref: '#/components/parameters/view_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Comments
  '/api/v2/list/{list_id}/comment':
    post:
      summary: Create List Comment
      operationId: CreateListComment
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                comment_text: Task comment content
                assignee: 53480
                notify_all: true
            example:
              - comment_text: Task comment content
                assignee: 53480
                notify_all: true
      tags:
        - Comments
    get:
      summary: Get List Comments
      operationId: GetListComments
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Comments
  '/api/v2/comment/{comment_id}':
    put:
      summary: Update Comment
      description:
        Please paste comment_id from original task comment created for
        continuity
      operationId: UpdateComment
      parameters:
        - $ref: '#/components/parameters/comment_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description:
          Please paste comment_id from original task comment created for
          continuity
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                comment_text: Updated comment text
                assignee: 53480
                resolved: true
            example:
              - comment_text: Updated comment text
                assignee: 53480
                resolved: true
      tags:
        - Comments
    delete:
      summary: Delete Comment
      description:
        Please paste comment_id from original task comment created for
        continuity
      operationId: DeleteComment
      parameters:
        - $ref: '#/components/parameters/comment_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Comments
  '/api/v2/list/{list_id}/field':
    get:
      summary: Get Accessible Custom Fields
      operationId: GetAccessibleCustomFields
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Custom Fields
  '/api/v2/task/{task_id}/field/{field_id}':
    post:
      summary: Set Custom Field Value
      operationId: SetCustomFieldValue
      parameters:
        - $ref: '#/components/parameters/task_id'
        - $ref: '#/components/parameters/field_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                value: 0
            example: "{\n\t\"value\": 0\n}"
      tags:
        - Custom Fields
    delete:
      summary: Remove Custom Field Value
      operationId: RemoveCustomFieldValue
      parameters:
        - $ref: '#/components/parameters/task_id'
        - $ref: '#/components/parameters/field_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Custom Fields
  '/api/v2/task/{task_id}/dependency':
    post:
      summary: Add Dependency
      operationId: AddDependency
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                depends_on: task_id
            example: "{\n\t\"depends_on\": \"task_id\"\n}"
      tags:
        - Dependencies
    delete:
      summary: Remove Dependency
      operationId: RemoveDependency
      parameters:
        - $ref: '#/components/parameters/depends_on'
        - $ref: '#/components/parameters/dependency_of'
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Dependencies
  '/api/v2/task/{task_id}/link/links_to':
    post:
      summary: Add Task Link
      operationId: AddTaskLink
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Dependencies
    delete:
      summary: Delete Task Link
      operationId: DeleteTaskLink
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Dependencies
  '/api/v2/space/{space_id}/folder':
    post:
      summary: Create a Folder
      operationId: CreateaFolder
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Folder From API V2
            example:
              - name: New Folder From API V2
      tags:
        - Folders
    get:
      summary: Get Folders
      operationId: GetFolders
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Folders
  '/api/v2/folder/{folder_id}':
    put:
      summary: Update a Folder
      description: Please paste previously created folder_id for continuity
      operationId: UpdateaFolder
      parameters:
        - $ref: '#/components/parameters/folder_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: Please paste previously created folder_id for continuity
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Updated Folder Name
            example:
              - name: Updated Folder Name
      tags:
        - Folders
    delete:
      summary: Delete a Folder
      description: Please paste previously updated folder_id for continuity
      operationId: DeleteaFolder
      parameters:
        - $ref: '#/components/parameters/folder_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Folders
    get:
      summary: Get Folder
      operationId: GetFolder
      parameters:
        - $ref: '#/components/parameters/folder_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Folders
  '/api/v2/team/{team_id}/goal':
    post:
      summary: Create a Goal
      operationId: CreateaGoal
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Goal From API V2
                due_date: 1577811600000
                description: Goal Description
                multiple_owners: true
                owners:
                  - 53480
                color: '#32a852'
            example:
              - name: Goal From API V2
                due_date: 1577811600000
                description: Goal Description
                multiple_owners: true
                owners:
                  - 53480
                color: '#32a852'
      tags:
        - Goals
    get:
      summary: Get Goals
      operationId: GetGoals
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Goals
  '/api/v2/goal/{goal_id}':
    put:
      summary: Update a Goal
      description: Please paste goal_id from previously created Goal for continuity
      operationId: UpdateaGoal
      parameters:
        - $ref: '#/components/parameters/goal_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: Please paste goal_id from previously created Goal for continuity
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Updated Goal Name
                due_date: 1577811600000
                description: Updated Goal Description
                rem_owners:
                  - 53480
                add_owners:
                  - 53480
                color: '#32a852'
            example:
              - name: Updated Goal Name
                due_date: 1577811600000
                description: Updated Goal Description
                rem_owners:
                  - 53480
                add_owners:
                  - 53480
                color: '#32a852'
      tags:
        - Goals
    delete:
      summary: Delete a Goal
      description: Please paste goal_id from previously updated Goal for continuity
      operationId: DeleteaGoal
      parameters:
        - $ref: '#/components/parameters/goal_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Goals
    get:
      summary: Get Goal
      description: 'Please paste goal_id after creating another Goal for continuity. '
      operationId: GetGoal
      parameters:
        - $ref: '#/components/parameters/goal_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Goals
  '/api/v2/goal/{goal_id}/key_result':
    post:
      summary: Create a Key Result
      description:
        Please use previously created goal_id created before "Get Goal" for
        continuity
      operationId: CreateaKeyResult
      parameters:
        - $ref: '#/components/parameters/goal_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description:
          Please use previously created goal_id created before "Get Goal" for
          continuity
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Key Result From API V2
                owners:
                  - 53480
                type: number
                steps_start: 0
                steps_end: 10
                unit: km
                task_ids: []
                list_ids: []
            example:
              - name: New Key Result From API V2
                owners:
                  - 53480
                type: number
                steps_start: 0
                steps_end: 10
                unit: km
                task_ids: []
                list_ids: []
      tags:
        - Goals
  '/api/v2/key_result/{key_result_id}':
    put:
      summary: Edit a Key Result
      description:
        Please paste key_result_id from previously created key_result for
        continuity
      operationId: EditaKeyResult
      parameters:
        - $ref: '#/components/parameters/key_result_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description:
          Please paste key_result_id from previously created key_result for
          continuity
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                steps_current: 5
                note: Target achieved
            example:
              - steps_current: 5
                note: Target achieved
      tags:
        - Goals
    delete:
      summary: Delete a Key Result
      description:
        Please post key_result_id from the previously edited key_result for
        continuity. Please also delete the previously created Goal created for
        testing the "Get Goal" endpoint.
      operationId: DeleteaKeyResult
      parameters:
        - $ref: '#/components/parameters/key_result_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Goals
  '/api/v2/team/{team_id}/guest':
    post:
      summary: Invite Guest to Workspace
      description:
        'The type of JSON to fill out: { "email": "example@gmail.com",
        "can_edit_tags": true || false, "can_see_time_estimated": true || false,
        "can_see_time_spent": true || false }'
      operationId: InviteGuesttoWorkspace
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description:
          'The type of JSON to fill out: { "email": "example@gmail.com",
          "can_edit_tags": true || false, "can_see_time_estimated": true ||
          false, "can_see_time_spent": true || false }'
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                email: jk+test_staging@clickup.com
                can_edit_tags: true
                can_see_time_estimated: true
                can_see_time_spent: true
            example:
              - email: jk+test_staging@clickup.com
                can_edit_tags: true
                can_see_time_estimated: true
                can_see_time_spent: true
      tags:
        - Guests
  '/api/v2/team/{team_id}/guest/{guest_id}':
    put:
      summary: Edit Guest Username
      operationId: EditGuestUsername
      parameters:
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/guest_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Guests
    delete:
      summary: Remove Guest from Workspace
      operationId: RemoveGuestfromWorkspace
      parameters:
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/guest_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Guests
    get:
      summary: Get Guest
      description: All the locations on the Workspace the guest has access too
      operationId: GetGuest
      parameters:
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/guest_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Guests
  '/api/v2/task/{task_id}/guest/{guest_id}':
    post:
      summary: Add Guest to Task
      description:
        'JSON Body: { "permission_level": "read" || "comment" || "edit" ||
        "create" }'
      operationId: AddGuesttoTask
      parameters:
        - $ref: '#/components/parameters/task_id'
        - $ref: '#/components/parameters/guest_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description:
          'JSON Body: { "permission_level": "read" || "comment" || "edit" ||
          "create" }'
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                permission_level: read
            example: "{\r\n  \"permission_level\": \"read\"\r\n}"
      tags:
        - Guests
    delete:
      summary: Remove Guest from Task
      operationId: RemoveGuestfromTask
      parameters:
        - $ref: '#/components/parameters/task_id'
        - $ref: '#/components/parameters/guest_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Guests
  '/api/v2/list/{list_id}/guest/{guest_id}':
    post:
      summary: Add Guest to List
      description:
        'JSON Body: { "permission_level": "read" || "comment" || "edit" ||
        "create" }'
      operationId: AddGuesttoList
      parameters:
        - $ref: '#/components/parameters/list_id'
        - $ref: '#/components/parameters/guest_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Guests
    delete:
      summary: Remove Guest from List
      operationId: RemoveGuestfromList
      parameters:
        - $ref: '#/components/parameters/list_id'
        - $ref: '#/components/parameters/guest_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Guests
  '/api/v2/folder/{folder_id}/guest/{guest_id}':
    post:
      summary: Add Guest to Folder
      description:
        'JSON Body: { "permission_level": "read" || "comment" || "edit" ||
        "create" }'
      operationId: AddGuesttoFolder
      parameters:
        - $ref: '#/components/parameters/folder_id'
        - $ref: '#/components/parameters/guest_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Guests
    delete:
      summary: Remove Guest from Folder
      operationId: RemoveGuestfromFolder
      parameters:
        - $ref: '#/components/parameters/folder_id'
        - $ref: '#/components/parameters/guest_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Guests
  '/api/v2/folder/{folder_id}/list':
    post:
      summary: Create a List
      operationId: CreateaList
      parameters:
        - $ref: '#/components/parameters/folder_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New List Name
                content: Sent from API V2
                due_date: 1577811600000
                due_date_time: false
                priority: 1
                assignee: 53480
                status: red
            example:
              - name: New List Name
                content: Sent from API V2
                due_date: 1577811600000
                due_date_time: false
                priority: 1
                assignee: 53480
                status: red
      tags:
        - Lists
    get:
      summary: Get Lists
      operationId: GetLists
      parameters:
        - $ref: '#/components/parameters/folder_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Lists
  '/api/v2/space/{space_id}/list':
    post:
      summary: Create Folderless List
      operationId: CreateFolderlessList
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                name: New List Name
                content: New List Content
                due_date: 1567780450202
                due_date_time: false
                priority: 1
                assignee: 183
                status: red
            example: "{\r\n  \"name\": \"New List Name\",\r\n  \"content\": \"New List Content\",\r\n  \"due_date\": 1567780450202,\r\n  \"due_date_time\": false,\r\n  \"priority\": 1,\r\n  \"assignee\": 183,\r\n  \"status\": \"red\"\r\n}"
      tags:
        - Lists
    get:
      summary: Get Folderless Lists
      operationId: GetFolderlessLists
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Lists
  '/api/v2/list/{list_id}':
    put:
      summary: Update a List
      description: Please paste previously created list_id for continuity
      operationId: UpdateaList
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: Please paste previously created list_id for continuity
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Updated List Name
                content: Updated List Content
                due_date: 1577811600000
                due_date_time: true
                priority: 2
                assignee: none
            example:
              - name: Updated List Name
                content: Updated List Content
                due_date: 1577811600000
                due_date_time: true
                priority: 2
                assignee: none
      tags:
        - Lists
    delete:
      summary: Delete a List
      description: Please paste previously updated list_id for continuity
      operationId: DeleteaList
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Lists
    get:
      summary: Get List
      operationId: GetList
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Lists
  '/api/v2/list/{list_id}/task/{task_id}':
    post:
      summary: Add a task to a list
      operationId: AddTaskToList
      parameters:
        - $ref: '#/components/parameters/list_id'
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Tags
  '/api/v2/task/{task_id}/member':
    get:
      summary: Get Task members
      operationId: GetTaskmembers
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Members
  '/api/v2/task/{list_id}/member':
    get:
      summary: Get List Members
      description: '    '
      operationId: GetListMembers
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Members
  '/api/v2/team/{team_id}/shared':
    get:
      summary: Get Shared Hierarchy
      operationId: GetSharedHierarchy
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Shared Hierarchy
  '/api/v2/team/{team_id}/space':
    post:
      summary: Create a Space
      operationId: CreateaSpace
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Space From API V2
                multiple_assignees: true
                features:
                  due_dates:
                    enabled: true
                    start_date: false
                    remap_due_dates: true
                    remap_closed_due_date: false
                  time_tracking:
                    enabled: false
                  tags:
                    enabled: true
                  time_estimates:
                    enabled: true
                  checklists:
                    enabled: true
                  custom_fields:
                    enabled: true
                  remap_dependencies:
                    enabled: true
                  dependency_warning:
                    enabled: true
                  portfolios:
                    enabled: true
            example:
              - name: New Space From API V2
                multiple_assignees: true
                features:
                  due_dates:
                    enabled: true
                    start_date: false
                    remap_due_dates: true
                    remap_closed_due_date: false
                  time_tracking:
                    enabled: false
                  tags:
                    enabled: true
                  time_estimates:
                    enabled: true
                  checklists:
                    enabled: true
                  custom_fields:
                    enabled: true
                  remap_dependencies:
                    enabled: true
                  dependency_warning:
                    enabled: true
                  portfolios:
                    enabled: true
      tags:
        - Spaces
  '/api/v2/space/{space_id}':
    put:
      summary: Update a Space
      description: Please paste the previously created space_id for continuity
      operationId: UpdateaSpace
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description: Please paste the previously created space_id for continuity
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: Updated Space Name
                multiple_assignees: true
                features:
                  due_dates:
                    enabled: true
                    start_date: false
                    remap_due_dates: true
                    remap_closed_due_date: false
                  time_tracking:
                    enabled: true
                  tags:
                    enabled: true
                  time_estimates:
                    enabled: true
                  checklists:
                    enabled: true
                  custom_fields:
                    enabled: true
                  remap_dependencies:
                    enabled: true
                  dependency_warning:
                    enabled: false
                  portfolios:
                    enabled: true
            example:
              - name: Updated Space Name
                multiple_assignees: true
                features:
                  due_dates:
                    enabled: true
                    start_date: false
                    remap_due_dates: true
                    remap_closed_due_date: false
                  time_tracking:
                    enabled: true
                  tags:
                    enabled: true
                  time_estimates:
                    enabled: true
                  checklists:
                    enabled: true
                  custom_fields:
                    enabled: true
                  remap_dependencies:
                    enabled: true
                  dependency_warning:
                    enabled: false
                  portfolios:
                    enabled: true
      tags:
        - Spaces
    delete:
      summary: Delete a Space
      description: Please paste the previously updated space_id for continuity
      operationId: DeleteaSpace
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Spaces
  '/api/v2/space/{space_id}/tag':
    get:
      summary: Get Space Tags
      operationId: GetSpaceTags
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Tags
    post:
      summary: Create a Space Tag
      operationId: CreateaSpaceTag
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                tag:
                  name: API V2
                  tag_fg: '#ffffff'
                  tag_bg: '#3c9d9b'
            example:
              - tag:
                  name: API V2
                  tag_fg: '#ffffff'
                  tag_bg: '#3c9d9b'
      tags:
        - Tags
  '/api/v2/space/{space_id}/tag/tag_name':
    put:
      summary: Edit a Space Tag
      operationId: EditaSpaceTag
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                tag:
                  name: API V2 PUT
                  tag_fg: '#ffffff'
                  tag_bg: '#3e3d9f'
            example:
              - tag:
                  name: API V2 PUT
                  tag_fg: '#ffffff'
                  tag_bg: '#3e3d9f'
      tags:
        - Tags
    delete:
      summary: Delete a Space Tag
      operationId: DeleteaSpaceTag
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Tags
  '/api/v2/task/{task_id}/tag/{tag_name}':
    post:
      summary: Add tag to task
      operationId: CreateaTaskTag
      parameters:
        - $ref: '#/components/parameters/task_id'
        - $ref: '#/components/parameters/tag_name'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Tags
    delete:
      summary: Remove Tag From Task
      operationId: RemoveTagFromTask
      parameters:
        - $ref: '#/components/parameters/task_id'
        - $ref: '#/components/parameters/tag_name'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Tags
  '/api/v2/list/{list_id}/task':
    post:
      summary: Create a Task
      operationId: CreateaTask
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Task Name
                description: New Task Description
                assignees:
                  - 183
                tags:
                  - tag name 1
                status: Open
                priority: 3
                due_date: 1508369194377
                due_date_time: false
                time_estimate: 8640000
                start_date: 1567780450202
                start_date_time: false
                notify_all: true
                parent: null
                links_to: null
                custom_fields:
                  - id: 0a52c486-5f05-403b-b4fd-c512ff05131c
                    value: 23
                  - id: 03efda77-c7a0-42d3-8afd-fd546353c2f5
                    value: Text field input
            example:
              - name: New Task Name
                description: New Task Description
                assignees:
                  - 183
                tags:
                  - tag name 1
                status: Open
                priority: 3
                due_date: 1508369194377
                due_date_time: false
                time_estimate: 8640000
                start_date: 1567780450202
                start_date_time: false
                notify_all: true
                parent: null
                links_to: null
                custom_fields:
                  - id: 0a52c486-5f05-403b-b4fd-c512ff05131c
                    value: 23
                  - id: 03efda77-c7a0-42d3-8afd-fd546353c2f5
                    value: Text field input
      tags:
        - Tasks
  '/api/v2/task/{task_id}':
    get:
      summary: Get Task
      operationId: GetTask
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Tasks
  '/api/v2/team/{team_id}/taskTemplate':
    get:
      summary: Get Task Templates
      operationId: GetTaskTemplates
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Task Templates
  '/api/v2/list/{list_id}/taskTemplate/{template_id}':
    post:
      summary: Create Task From Template
      operationId: CreateTaskFromTemplate
      parameters:
        - $ref: '#/components/parameters/list_id'
        - $ref: '#/components/parameters/template_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: API V2 Test
            example: "{\n\t\"name\": \"API V2 Test\"\n}"
      tags:
        - Task Templates
  '/api/v2/task/{task_id}/time':
    post:
      summary: Track Time
      operationId: TrackTime
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                start: 1567780450202
                end: 1508369194377
                time: 8640000
            example:
              - start: 1567780450202
                end: 1508369194377
                time: 8640000
      tags:
        - Time Tracking Legacy
  '/api/v2/task/{task_id}/time/':
    get:
      summary: Get Time Tracked
      operationId: GetTimeTracked
      parameters:
        - $ref: '#/components/parameters/task_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking Legacy
  '/api/v2/task/{task_id}/time/{interval_id}':
    put:
      summary: Edit Time Tracked
      operationId: EditTimeTracked
      parameters:
        - $ref: '#/components/parameters/task_id'
        - $ref: '#/components/parameters/interval_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                start: 1567780450202
                end: 1508369194377
                time: 8640000
            example:
              - start: 1567780450202
                end: 1508369194377
                time: 8640000
      tags:
        - Time Tracking Legacy
    delete:
      summary: Delete Time Tracked
      operationId: DeleteTimeTracked
      parameters:
        - $ref: '#/components/parameters/task_id'
        - $ref: '#/components/parameters/interval_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking Legacy
  '/api/v2/team/{team_id}/time_entries':
    get:
      summary: Get time entries within a date range
      operationId: Gettimeentrieswithinadaterange
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking 2.0
    post:
      summary: Create a time entry
      operationId: Createatimeentry
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                description: from api
                tags:
                  - name: josh1
                    tag_bg: '#BF55EC'
                    tag_fg: '#BF55EC'
                start: 1595282645000
                created_with: string
                billable: true
                duration: 50000
                assignee: 300528
            example: "{\r\n  \"description\": \"from api\",\r\n  \"tags\": [\r\n    {\r\n    \t\"name\": \"josh1\",\r\n    \t\"tag_bg\": \"#BF55EC\",\r\n        \"tag_fg\": \"#BF55EC\"\r\n    }\r\n  ],\r\n  \"start\": 1595282645000,\r\n  \"created_with\": \"string\",\r\n  \"billable\": true,\r\n  \"duration\": 50000,\r\n  \"assignee\": 300528\r\n}"
      tags:
        - Time Tracking 2.0
  '/api/v2/team/{team_id}/time_entries/{time_entry_id}':
    get:
      summary: Get singular time entry
      operationId: Getsingulartimeentry
      parameters:
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/time_entry_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking 2.0
    delete:
      summary: Delete time a time entry
      operationId: Deletetimeatimeentry
      parameters:
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/time_entry_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking 2.0
  '/api/v2/team/{team_id}/time_entries/current':
    get:
      summary: Get running time entry
      operationId: Getrunningtimeentry
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking 2.0
  '/api/v2/team/{team_id}/time_entries/tags':
    delete:
      summary: Remove tags from timer entry
      operationId: Removetagsfromtimerentry
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking 2.0
    post:
      summary: Add tags from time entries
      operationId: Addtagsfromtimeentries
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                time_entry_ids:
                  - '2043908062133112350'
                tags:
                  - name: test tag
                    tag_bg: '#000000'
                    tag_fg: '#000000'
            example: "{\r\n  \"time_entry_ids\": [\r\n    \"2043908062133112350\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n        \"name\": \"test tag\",\r\n        \"tag_bg\": \"#000000\",\r\n        \"tag_fg\": \"#000000\"\r\n    }\r\n  ]\r\n}"
      tags:
        - Time Tracking 2.0
    get:
      summary: Get all tags from time entries
      operationId: Getalltagsfromtimeentries
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking 2.0
    put:
      summary: Change tag names from time entries
      operationId: Changetagnamesfromtimeentries
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                name: joshy
                new_name: MAMA
                tag_bg: '#000000'
                tag_fg: '#000000'
            example: "{\r\n  \"name\": \"joshy\",\r\n  \"new_name\": \"MAMA\",\r\n  \"tag_bg\": \"#000000\",\r\n  \"tag_fg\": \"#000000\"\r\n}"
      tags:
        - Time Tracking 2.0
  '/api/v2/team/{team_id}/time_entries/start/{timer_id}':
    post:
      summary: Start a time entry
      operationId: Startatimeentry
      parameters:
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/timer_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking 2.0
  '/api/v2/team/{team_id}/time_entries/stop':
    post:
      summary: Stop current time entry
      operationId: Stopcurrenttimeentry
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Time Tracking 2.0
  '/api/v2/team/{team_id}/time_entries/{timer_id}':
    put:
      summary: Update a time entry
      operationId: Updateatimeentry
      parameters:
        - $ref: '#/components/parameters/custom_task_ids'
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/timer_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                description: string
                tags:
                  - string
                tag_action: replace
                start: 0
                end: 0
                tid: JOSH-720
                billable: true
                duration: 40000
                assignee: 0
            example: "{\r\n  \"description\": \"string\",\r\n  \"tags\": [\r\n    \"string\"\r\n  ],\r\n  \"tag_action\": \"replace\",\r\n  \"start\": 0,\r\n  \"end\": 0,\r\n  \"tid\": \"JOSH-720\",\r\n  \"billable\": true,\r\n  \"duration\": 40000,\r\n  \"assignee\": 0\r\n}"
      tags:
        - Time Tracking 2.0
  '/api/v2/team/{team_id}/user':
    post:
      summary: Invite User to Workspace
      operationId: InviteUsertoWorkspace
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                email: user@example.com
                admin: true
            example: "{\r\n  \"email\": \"user@example.com\",\r\n  \"admin\": true\r\n}"
      tags:
        - Users
  '/api/v2/team/{team_id}/user/{user_id}':
    put:
      summary: Edit User on Workspace
      operationId: EditUseronWorkspace
      parameters:
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example:
                username: User Name
                admin: false
            example: "{\r\n  \"username\": \"User Name\",\r\n  \"admin\": false\r\n}"
      tags:
        - Users
    delete:
      summary: Remove User From Workspace
      operationId: RemoveUserFromWorkspace
      parameters:
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Users
    get:
      summary: Get User
      operationId: GetUser
      parameters:
        - $ref: '#/components/parameters/team_id'
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Users
  '/api/v2/team/{team_id}/view':
    post:
      summary: Create Team View
      operationId: CreateTeamView
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: New Team View Name
                type: list
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: false
                  show_closed_subtasks: false
                  show_assignees: true
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
            example:
              - name: New Team View Name
                type: list
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: false
                  show_closed_subtasks: false
                  show_assignees: true
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
      tags:
        - Views
    get:
      summary: Get Team Views
      operationId: GetTeamViews
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Views
  '/api/v2/space/{space_id}/view':
    post:
      summary: Create Space View
      operationId: CreateSpaceView
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: API V2 View
                type: list
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: false
                  show_closed_subtasks: false
                  show_assignees: true
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
            example:
              - name: API V2 View
                type: list
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: false
                  show_closed_subtasks: false
                  show_assignees: true
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
      tags:
        - Views
    get:
      summary: Get Space Views
      operationId: GetSpaceViews
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Views
  '/api/v2/folder/{folder_id}/view':
    post:
      summary: Create Folder View
      operationId: CreateFolderView
      parameters:
        - $ref: '#/components/parameters/folder_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: API V2 View
                type: list
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: false
                  show_closed_subtasks: false
                  show_assignees: true
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
            example:
              - name: API V2 View
                type: list
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: false
                  show_closed_subtasks: false
                  show_assignees: true
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
      tags:
        - Views
    get:
      summary: Get Folder Views
      operationId: GetFolderViews
      parameters:
        - $ref: '#/components/parameters/folder_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Views
  '/api/v2/list/{list_id}/view':
    post:
      summary: Create List View
      operationId: CreateListView
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: API V2 View
                type: list
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: false
                  show_closed_subtasks: false
                  show_assignees: true
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
            example:
              - name: API V2 View
                type: list
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: false
                  show_closed_subtasks: false
                  show_assignees: true
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
      tags:
        - Views
    get:
      summary: Get List Views
      operationId: GetListViews
      parameters:
        - $ref: '#/components/parameters/list_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Views
  '/api/v2/view/{view_id}':
    get:
      summary: Get View
      description:
        Please paste view_id from "API V2 View" on "API V2 Test Space" for
        continuity
      operationId: GetView
      parameters:
        - $ref: '#/components/parameters/view_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Views
    put:
      summary: Update View
      description:
        Please paste view_id from "API V2 View" on "API V2 Test Space" for
        continuity
      operationId: UpdateView
      parameters:
        - $ref: '#/components/parameters/view_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        description:
          Please paste view_id from "API V2 View" on "API V2 Test Space" for
          continuity
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                name: API V2 View
                type: list
                parent:
                  id: '512'
                  type: 7
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: true
                  show_closed_subtasks: true
                  show_assignees: false
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
            example:
              - name: API V2 View
                type: list
                parent:
                  id: '512'
                  type: 7
                grouping:
                  field: status
                  dir: 1
                  collapsed: []
                  ignore: false
                divide:
                  field: null
                  dir: null
                  collapsed: []
                sorting:
                  fields: []
                filters:
                  op: AND
                  fields: []
                  search: ''
                  show_closed: false
                columns:
                  fields: []
                team_sidebar:
                  assignees: []
                  assigned_comments: false
                  unassigned_tasks: false
                settings:
                  show_task_locations: false
                  show_subtasks: 3
                  show_subtask_parent_names: true
                  show_closed_subtasks: true
                  show_assignees: false
                  show_images: true
                  collapse_empty_columns: null
                  me_comments: true
                  me_subtasks: true
                  me_checklists: true
      tags:
        - Views
    delete:
      summary: Delete a View
      description: Please paste view_id from a view on "Everything" for continuity
      operationId: DeleteaView
      parameters:
        - $ref: '#/components/parameters/view_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Views
  '/api/v2/view/{view_id}/task':
    get:
      summary: Get View Tasks
      operationId: GetViewTasks
      parameters:
        - name: page
          in: query
          required: true
          style: form
          schema:
            type: number
        - $ref: '#/components/parameters/view_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Views
  '/api/v2/team/{team_id}/webhook':
    post:
      summary: Create a Webhook
      operationId: CreateaWebhook
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example:
                endpoint: 'https://af4a0f62.ngrok.io'
                events:
                  - taskCreated
                  - taskUpdated
                  - taskDeleted
                  - taskPriorityUpdated
                  - taskStatusUpdated
                  - taskAssigneeUpdated
                  - taskDueDateUpdated
                  - taskTagUpdated
                  - taskMoved
                  - taskCommentPosted
                  - taskCommentUpdated
                  - taskTimeEstimateUpdated
                  - taskTimeTrackedUpdated
                  - listCreated
                  - listUpdated
                  - listDeleted
                  - folderCreated
                  - folderUpdated
                  - folderDeleted
                  - spaceCreated
                  - spaceUpdated
                  - spaceDeleted
                  - goalCreated
                  - goalUpdated
                  - goalDeleted
                  - keyResultCreated
                  - keyResultUpdated
                  - keyResultDelted
            example:
              - endpoint: 'https://af4a0f62.ngrok.io'
                events:
                  - taskCreated
                  - taskUpdated
                  - taskDeleted
                  - taskPriorityUpdated
                  - taskStatusUpdated
                  - taskAssigneeUpdated
                  - taskDueDateUpdated
                  - taskTagUpdated
                  - taskMoved
                  - taskCommentPosted
                  - taskCommentUpdated
                  - taskTimeEstimateUpdated
                  - taskTimeTrackedUpdated
                  - listCreated
                  - listUpdated
                  - listDeleted
                  - folderCreated
                  - folderUpdated
                  - folderDeleted
                  - spaceCreated
                  - spaceUpdated
                  - spaceDeleted
                  - goalCreated
                  - goalUpdated
                  - goalDeleted
                  - keyResultCreated
                  - keyResultUpdated
                  - keyResultDelted
      tags:
        - Webhooks
    get:
      summary: Get Webhooks
      description: Please create another webhook and test afterward
      operationId: GetWebhooks
      parameters:
        - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Webhooks
  '/api/v2/webhook/{webhook_id}':
    delete:
      summary: Delete a Webhook
      description: Please paste webhook_id from previously created webhook for continuity
      operationId: DeleteaWebhook
      parameters:
        - $ref: '#/components/parameters/webhook_id'
      responses:
        '200':
          description: ''
          headers: {}
      tags:
        - Webhooks
components:
  securitySchemes:
    apiKeyAuth:
        type: apiKey
        in: header
        name: Authorization
  parameters:
    client_id:
      name: client_id
      in: query
      required: true
      style: form
      schema:
        type: number
    client_secret:
      name: client_secret
      in: query
      required: true
      style: form
      schema:
        type: number
    code:
      name: code
      in: query
      required: true
      style: form
      schema:
        type: number
    depends_on:
      name: depends_on
      in: query
      required: true
      style: form
      schema:
        type: string
        example: task_id
    dependency_of:
      name: dependency_of
      in: query
      required: true
      style: form
      schema:
        type: string
        example: task_id
    page:
      name: page
      in: query
      required: true
      style: form
      schema:
        type: number
    timer_id:
      name: timer_id
      in: path
      required: true
      style: simple
      schema:
        type: string
        example: timer_id
    custom_task_ids:
      name: custom_task_ids
      in: query
      required: true
      style: form
      schema:
        type: number
    team_id:
      name: team_id
      in: path
      required: true
      schema:
        type: number
    task_id:
      name: task_id
      in: path
      required: true
      schema:
        type: string
    tag_name:
      name: tag_name
      in: path
      required: true
      schema:
        type: string
    checklist_id:
      name: checklist_id
      in: path
      required: true
      schema:
        type: string
    checklist_item_id:
      name: checklist_item_id
      in: path
      required: true
      schema:
        type: string
    view_id:
      name: view_id
      in: path
      required: true
      schema:
        type: string
    list_id:
      name: list_id
      in: path
      required: true
      schema:
        type: string
    comment_id:
      name: comment_id
      in: path
      required: true
      schema:
        type: string
    field_id:
      name: field_id
      in: path
      required: true
      schema:
        type: string
    space_id:
      name: space_id
      in: path
      required: true
      schema:
        type: string
    folder_id:
      name: folder_id
      in: path
      required: true
      schema:
        type: string
    goal_id:
      name: goal_id
      in: path
      required: true
      schema:
        type: string
    key_result_id:
      name: key_result_id
      in: path
      required: true
      schema:
        type: string
    guest_id:
      name: guest_id
      in: path
      required: true
      schema:
        type: string
    template_id:
      name: template_id
      in: path
      required: true
      schema:
        type: string
    interval_id:
      name: interval_id
      in: path
      required: true
      schema:
        type: string
    time_entry_id:
      name: time_entry_id
      in: path
      required: true
      schema:
        type: string
    user_id:
      name: user_id
      in: path
      required: true
      schema:
        type: string
    webhook_id:
      name: webhook_id
      in: path
      required: true
      schema:
        type: string
security:
  - apiKeyAuth: []
tags: []
externalDocs:
  url: ''
  description: ''
